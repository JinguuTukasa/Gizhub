services:
  # 1. Laravel (app コンテナ)
  app:
    container_name: laravel_app
    build:
      context: ./app
      dockerfile: Dockerfile
    volumes:
      - ./app:/var/www/html
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    depends_on:
      - db
      - redis
    networks:
      - app_network

  # 2. Nginx (nginx コンテナ)
  nginx:
    container_name: nginx_server
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./app:/var/www/html
    ports:
      - "80:80"
    depends_on:
      - app
      - frontend
    networks:
      - app_network

  # 3. MySQL (db コンテナ)
  db:
    container_name: mysql_db
    build:
      context: ./db
      dockerfile: Dockerfile
    environment:
      MYSQL_DATABASE: chat_db
      MYSQL_USER: chat_user
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app_network

  # 4. React (frontend コンテナ)
  frontend:
    container_name: react_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/usr/src/app # frontendディレクトリのみをマウント
      - /usr/src/app/node_modules # node_modules はホストと分離
    ports:
      - "5173:5173"
    networks:
      - app_network

  # 5. Redis (redis コンテナ)
  redis:
    container_name: redis_server
    build:
      context: ./redis
      dockerfile: Dockerfile
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network

  # 6. Laravel Echo Server (echo-server コンテナ)
  echo-server:
    container_name: laravel_echo_server
    build:
      context: ./echo-server
      dockerfile: Dockerfile
    volumes:
      - ./echo-server/laravel-echo-server.json:/usr/src/app/laravel-echo-server.json:ro
    environment:
      REDIS_HOST: redis
    depends_on:
      - redis
    networks:
      - app_network

  # 7. coturn (STUN/TURN サーバー)
  coturn:
    container_name: coturn_server
    image: instrumentisto/coturn
    restart: always
    ports:
      - "3478:3478"       # STUN/TURN の標準ポート（TCP/UDP）
      - "3478:3478/udp"
      - "5349:5349"       # TLS 用ポート（TCP/UDP）
      - "5349:5349/udp"
    volumes:
      - ./coturn/turnserver.conf:/etc/coturn/turnserver.conf:ro
    command: ["-c", "/etc/coturn/turnserver.conf"]
    networks:
      - app_network

volumes:
  mysql_data:
  redis_data:

networks:
  app_network:
    driver: bridge
